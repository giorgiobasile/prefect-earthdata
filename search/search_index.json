{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"prefect-eo \ud83c\udf0d\ud83d\udef0\ufe0f","text":"<p>Prefect integrations with Earth Observation (EO) data providers.</p>"},{"location":"#resources","title":"Resources","text":"<p>For more tips on how to use tasks and flows in a Collection, check out Using Collections!</p>"},{"location":"#installation","title":"Installation","text":"<p>Install <code>prefect-eo</code> with <code>pip</code>:</p> <pre><code>pip install prefect-eo\n</code></pre> <p>Requires an installation of Python 3.8+.</p> <p>We recommend using a Python virtual environment manager such as pipenv, conda or virtualenv.</p> <p>These tasks are designed to work with Prefect 2.0. For more information about how to use Prefect, please refer to the Prefect documentation.</p>"},{"location":"#feedback","title":"Feedback","text":"<p>If you encounter any bugs while using <code>prefect-eo</code>, feel free to open an issue in the prefect-eo repository.</p> <p>If you have any questions or issues while using <code>prefect-eo</code>, you can find help in either the Prefect Discourse forum or the Prefect Slack community.</p> <p>Feel free to star or watch <code>prefect-eo</code> for updates too!</p>"},{"location":"#contributing","title":"Contributing","text":"<p>If you'd like to help contribute to fix an issue or add a feature to <code>prefect-eo</code>, please propose changes through a pull request from a fork of the repository.</p> <p>Here are the steps:</p> <ol> <li>Fork the repository</li> <li>Clone the forked repository</li> <li>Install the repository and its dependencies: <pre><code>pip install -e \".[dev]\"\n</code></pre></li> <li>Make desired changes</li> <li>Add tests</li> <li>Insert an entry to CHANGELOG.md</li> <li>Install <code>pre-commit</code> to perform quality checks prior to commit: <pre><code>pre-commit install\n</code></pre></li> <li><code>git commit</code>, <code>git push</code>, and create a pull request</li> </ol>"},{"location":"blocks_catalog/","title":"Blocks Catalog","text":"<p>Below is a list of Blocks available for registration in <code>prefect-eo</code>.</p> <p>To register blocks in this module to view and edit them on Prefect Cloud, first install the required packages, then <pre><code>prefect block register -m prefect_eo\n</code></pre> Note, to use the <code>load</code> method on Blocks, you must already have a block document saved through code or saved through the UI.</p>"},{"location":"blocks_catalog/#earthdata-module","title":"Earthdata Module","text":"<p>EarthdataCredentials</p> <p>Block used to manage authentication with NASA Earthdata. NASA Earthdata authentication is handled via the <code>earthaccess</code> module. Refer to the earthaccess docs for more info about the possible credential configurations.</p> <p>To load the EarthdataCredentials: <pre><code>from prefect import flow\nfrom prefect_eo.earthdata import EarthdataCredentials\n\n@flow\ndef my_flow():\n    my_block = EarthdataCredentials.load(\"MY_BLOCK_NAME\")\n\nmy_flow()\n</code></pre> For additional examples, check out the Earthdata Module under Examples Catalog.</p>"},{"location":"earthdata/","title":"NASA Earthdata","text":""},{"location":"earthdata/#prefect_eo.earthdata","title":"<code>prefect_eo.earthdata</code>","text":"<p>Module handling NASA Earthdata credentials and tasks</p>"},{"location":"earthdata/#prefect_eo.earthdata-classes","title":"Classes","text":""},{"location":"earthdata/#prefect_eo.earthdata.EarthdataCredentials","title":"<code>EarthdataCredentials</code>","text":"<p>         Bases: <code>Block</code></p> <p>Block used to manage authentication with NASA Earthdata. NASA Earthdata authentication is handled via the <code>earthaccess</code> module. Refer to the earthaccess docs for more info about the possible credential configurations.</p> Example <p>Load stored Earthdata credentials: <pre><code>from prefect_eo import EarthdataCredentials\n\ned_credentials_block = EarthdataCredentials.load(\"BLOCK_NAME\")\n</code></pre></p> Source code in <code>prefect_eo/earthdata.py</code> <pre><code>class EarthdataCredentials(Block):\n\"\"\"\n    Block used to manage authentication with NASA Earthdata.\n    NASA Earthdata authentication is handled via the `earthaccess` module.\n    Refer to the [earthaccess docs](https://nsidc.github.io/earthaccess/)\n    for more info about the possible credential configurations.\n\n    Example:\n        Load stored Earthdata credentials:\n        ```python\n        from prefect_eo import EarthdataCredentials\n\n        ed_credentials_block = EarthdataCredentials.load(\"BLOCK_NAME\")\n        ```\n    \"\"\"  # noqa E501\n\n    _logo_url = \"https://yt3.googleusercontent.com/ytc/AGIKgqPjIUeAw3_hrkHWZgixdwD5jc-hTWweoCA6bJMhUg=s176-c-k-c0x00ffffff-no-rj\"  # noqa\n    _block_type_name = \"NASA Earthdata Credentials\"\n    _documentation_url = \"https://nsidc.github.io/earthaccess/\"  # noqa\n\n    earthdata_username: str = Field(\n        default=...,\n        description=\"The Earthdata username of a specific account.\",\n        title=\"Earthdata username\",\n    )\n    earthdata_password: SecretStr = Field(\n        default=...,\n        description=\"The Earthdata password of a specific account.\",\n        title=\"Earthdata password\",\n    )\n\n    def login(self) -&gt; earthaccess.Auth:\n\"\"\"\n        Returns an authenticated session with NASA Earthdata using\n        the [`earthaccess.login()`](https://nsidc.github.io/earthaccess/user-reference/api/api/#earthaccess.api.login) function\n\n        Example:\n            Authenticates with NASA Earthdata using the credentials.\n\n            ```python\n            from prefect_eo.earthdata import EarthdataCredentials\n\n            earthdata_credentials_block = EarthdataCredentials(\n                earthdata_username = \"username\",\n                earthdata_password = \"password\"\n            )\n            earthdata_auth = earthdata_credentials_block.login()\n            ```\n        \"\"\"  # noqa E501\n\n        os.environ[\"EARTHDATA_USERNAME\"] = self.earthdata_username\n        os.environ[\"EARTHDATA_PASSWORD\"] = self.earthdata_password.get_secret_value()\n        return earthaccess.login(strategy=\"environment\")\n</code></pre>"},{"location":"earthdata/#prefect_eo.earthdata.EarthdataCredentials-functions","title":"Functions","text":""},{"location":"earthdata/#prefect_eo.earthdata.EarthdataCredentials.login","title":"<code>login</code>","text":"<p>Returns an authenticated session with NASA Earthdata using the <code>earthaccess.login()</code> function</p> Example <p>Authenticates with NASA Earthdata using the credentials.</p> <pre><code>from prefect_eo.earthdata import EarthdataCredentials\n\nearthdata_credentials_block = EarthdataCredentials(\n    earthdata_username = \"username\",\n    earthdata_password = \"password\"\n)\nearthdata_auth = earthdata_credentials_block.login()\n</code></pre> Source code in <code>prefect_eo/earthdata.py</code> <pre><code>def login(self) -&gt; earthaccess.Auth:\n\"\"\"\n    Returns an authenticated session with NASA Earthdata using\n    the [`earthaccess.login()`](https://nsidc.github.io/earthaccess/user-reference/api/api/#earthaccess.api.login) function\n\n    Example:\n        Authenticates with NASA Earthdata using the credentials.\n\n        ```python\n        from prefect_eo.earthdata import EarthdataCredentials\n\n        earthdata_credentials_block = EarthdataCredentials(\n            earthdata_username = \"username\",\n            earthdata_password = \"password\"\n        )\n        earthdata_auth = earthdata_credentials_block.login()\n        ```\n    \"\"\"  # noqa E501\n\n    os.environ[\"EARTHDATA_USERNAME\"] = self.earthdata_username\n    os.environ[\"EARTHDATA_PASSWORD\"] = self.earthdata_password.get_secret_value()\n    return earthaccess.login(strategy=\"environment\")\n</code></pre>"},{"location":"earthdata/#prefect_eo.earthdata-functions","title":"Functions","text":""},{"location":"earthdata/#prefect_eo.earthdata.earthdata_download","title":"<code>earthdata_download</code>  <code>async</code>","text":"<p>Downloads data from NASA Earthdata using the <code>earthaccess.download()</code> function</p> <p>Parameters:</p> Name Type Description Default <code>credentials</code> <code>EarthdataCredentials</code> <p>An <code>EarthdataCredentials</code> object used to authenticate with NASA Earthdata.</p> required <code>args</code> <p>Additional positional arguments to be passed to <code>earthaccess.download()</code>.</p> <code>()</code> <code>kwargs</code> <p>Additional keyword arguments to be passed to <code>earthaccess.download()</code>.</p> <code>{}</code> <p>Returns:</p> Type Description <code>List[str]</code> <p>A list of <code>DataGranule</code> objects representing the search results.</p> Example <p>Searches and downloads granules through NASA Earthdata.</p> <pre><code>from prefect import flow\nfrom prefect_eo.earthdata import EarthdataCredentials\nfrom prefect_eo.earthdata import earthdata_search_data\n\n@flow\ndef example_earthdata_download_flow():\n\n    credentials = EarthdataCredentials(\n        earthdata_userame = \"username\",\n        earthdata_password = \"password\"\n    )\n\n    search_results = earthdata_search_data(\n        earthdata_credentials,\n        count=1,\n        short_name=\"ATL08\",\n        bounding_box=(-92.86, 16.26, -91.58, 16.97),\n    )\n\n    files = earthdata_download(\n        earthdata_credentials,\n        granules=granules,\n        local_path=download_path\n    )\n\n    return granules, files\n\nexample_earthdata_download_flow()\n</code></pre> Source code in <code>prefect_eo/earthdata.py</code> <pre><code>@task\nasync def earthdata_download(\n    credentials: EarthdataCredentials, *args, **kwargs\n) -&gt; List[str]:\n\"\"\"\n    Downloads data from NASA Earthdata using the\n    [`earthaccess.download()`](https://nsidc.github.io/earthaccess/user-reference/api/api/#earthaccess.api.download) function\n\n    Args:\n        credentials: An `EarthdataCredentials` object used\n            to authenticate with NASA Earthdata.\n        args: Additional positional arguments to be passed\n            to `earthaccess.download()`.\n        kwargs: Additional keyword arguments to be passed\n            to `earthaccess.download()`.\n\n    Returns:\n        A list of `DataGranule` objects representing the search results.\n\n    Example:\n        Searches and downloads granules through NASA Earthdata.\n\n        ```python\n        from prefect import flow\n        from prefect_eo.earthdata import EarthdataCredentials\n        from prefect_eo.earthdata import earthdata_search_data\n\n        @flow\n        def example_earthdata_download_flow():\n\n            credentials = EarthdataCredentials(\n                earthdata_userame = \"username\",\n                earthdata_password = \"password\"\n            )\n\n            search_results = earthdata_search_data(\n                earthdata_credentials,\n                count=1,\n                short_name=\"ATL08\",\n                bounding_box=(-92.86, 16.26, -91.58, 16.97),\n            )\n\n            files = earthdata_download(\n                earthdata_credentials,\n                granules=granules,\n                local_path=download_path\n            )\n\n            return granules, files\n\n        example_earthdata_download_flow()\n        ```\n    \"\"\"  # noqa: E501\n\n    logger = get_run_logger()\n\n    logger.debug(\"Authenticating to NASA Earthdata\")\n    auth = credentials.login()\n    if not auth.authenticated:\n        raise ValueError(\"Could not authenticate to NASA Earthdata\")\n\n    return earthaccess.download(*args, **kwargs)\n</code></pre>"},{"location":"earthdata/#prefect_eo.earthdata.earthdata_search_data","title":"<code>earthdata_search_data</code>  <code>async</code>","text":"<p>Searches for data on NASA Earthdata using the <code>earthaccess.search_data()</code> function</p> <p>Parameters:</p> Name Type Description Default <code>credentials</code> <code>EarthdataCredentials</code> <p>An <code>EarthdataCredentials</code> object used to authenticate with NASA Earthdata.</p> required <code>args</code> <p>Additional positional arguments to be passed to <code>earthaccess.search_data()</code>.</p> <code>()</code> <code>kwargs</code> <p>Additional keyword arguments to be passed to <code>earthaccess.search_data()</code>.</p> <code>{}</code> <p>Returns:</p> Type Description <code>List[earthaccess.results.DataGranule]</code> <p>A list of <code>DataGranule</code> objects representing the search results.</p> Example <p>Searches granules through NASA Earthdata.</p> <pre><code>from prefect import flow\nfrom prefect_eo.earthdata import EarthdataCredentials\nfrom prefect_eo.earthdata import earthdata_search_data\n\n@flow\ndef example_earthdata_search_flow():\n\n    credentials = EarthdataCredentials(\n        earthdata_userame = \"username\",\n        earthdata_password = \"password\"\n    )\n\n    search_results = earthdata_search_data(\n        earthdata_credentials,\n        count=1,\n        short_name=\"ATL08\",\n        bounding_box=(-92.86, 16.26, -91.58, 16.97),\n    )\n    return search_results\n\nexample_earthdata_search_flow()\n</code></pre> Source code in <code>prefect_eo/earthdata.py</code> <pre><code>@task\nasync def earthdata_search_data(\n    credentials: EarthdataCredentials, *args, **kwargs\n) -&gt; List[earthaccess.results.DataGranule]:\n\"\"\"\n    Searches for data on NASA Earthdata using the\n    [`earthaccess.search_data()`](https://nsidc.github.io/earthaccess/user-reference/api/api/#earthaccess.api.search_data) function\n\n    Args:\n        credentials: An `EarthdataCredentials` object used\n            to authenticate with NASA Earthdata.\n        args: Additional positional arguments to be passed\n            to `earthaccess.search_data()`.\n        kwargs: Additional keyword arguments to be passed\n            to `earthaccess.search_data()`.\n\n    Returns:\n        A list of `DataGranule` objects representing the search results.\n\n    Example:\n        Searches granules through NASA Earthdata.\n\n        ```python\n        from prefect import flow\n        from prefect_eo.earthdata import EarthdataCredentials\n        from prefect_eo.earthdata import earthdata_search_data\n\n        @flow\n        def example_earthdata_search_flow():\n\n            credentials = EarthdataCredentials(\n                earthdata_userame = \"username\",\n                earthdata_password = \"password\"\n            )\n\n            search_results = earthdata_search_data(\n                earthdata_credentials,\n                count=1,\n                short_name=\"ATL08\",\n                bounding_box=(-92.86, 16.26, -91.58, 16.97),\n            )\n            return search_results\n\n        example_earthdata_search_flow()\n        ```\n    \"\"\"  # noqa: E501\n\n    logger = get_run_logger()\n\n    logger.debug(\"Authenticating to NASA Earthdata\")\n    auth = credentials.login()\n    if not auth.authenticated:\n        raise ValueError(\"Could not authenticate to NASA Earthdata\")\n\n    return earthaccess.search_data(*args, **kwargs)\n</code></pre>"},{"location":"examples_catalog/","title":"Examples Catalog","text":"<p>Below is a list of examples for <code>prefect-eo</code>.</p>"},{"location":"examples_catalog/#earthdata-module","title":"Earthdata Module","text":"<p>Searches granules through NASA Earthdata.</p> <p><pre><code>from prefect import flow\nfrom prefect_eo.earthdata import EarthdataCredentials\nfrom prefect_eo.earthdata import earthdata_search_data\n\n@flow\ndef example_earthdata_search_flow():\n\n    credentials = EarthdataCredentials(\n        earthdata_userame = \"username\",\n        earthdata_password = \"password\"\n    )\n\n    search_results = earthdata_search_data(\n        earthdata_credentials,\n        count=1,\n        short_name=\"ATL08\",\n        bounding_box=(-92.86, 16.26, -91.58, 16.97),\n    )\n    return search_results\n\nexample_earthdata_search_flow()\n</code></pre> Authenticates with NASA Earthdata using the credentials.</p> <p><pre><code>from prefect_eo.earthdata import EarthdataCredentials\n\nearthdata_credentials_block = EarthdataCredentials(\n    earthdata_username = \"username\",\n    earthdata_password = \"password\"\n)\nearthdata_auth = earthdata_credentials_block.login()\n</code></pre> Searches and downloads granules through NASA Earthdata.</p> <pre><code>from prefect import flow\nfrom prefect_eo.earthdata import EarthdataCredentials\nfrom prefect_eo.earthdata import earthdata_search_data\n\n@flow\ndef example_earthdata_download_flow():\n\n    credentials = EarthdataCredentials(\n        earthdata_userame = \"username\",\n        earthdata_password = \"password\"\n    )\n\n    search_results = earthdata_search_data(\n        earthdata_credentials,\n        count=1,\n        short_name=\"ATL08\",\n        bounding_box=(-92.86, 16.26, -91.58, 16.97),\n    )\n\n    files = earthdata_download(\n        earthdata_credentials,\n        granules=granules,\n        local_path=download_path\n    )\n\n    return granules, files\n\nexample_earthdata_download_flow()\n</code></pre>"}]}